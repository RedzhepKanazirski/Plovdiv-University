//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC.SOAPService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SOAPService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        MVC.SOAPService.CompositeType GetDataUsingDataContract(MVC.SOAPService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<MVC.SOAPService.CompositeType> GetDataUsingDataContractAsync(MVC.SOAPService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAbilities", ReplyAction="http://tempuri.org/IService1/GetAbilitiesResponse")]
        AplicationService.DTOs.AbilityDTO[] GetAbilities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAbilities", ReplyAction="http://tempuri.org/IService1/GetAbilitiesResponse")]
        System.Threading.Tasks.Task<AplicationService.DTOs.AbilityDTO[]> GetAbilitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAbilitiesSearch", ReplyAction="http://tempuri.org/IService1/GetAbilitiesSearchResponse")]
        AplicationService.DTOs.AbilityDTO[] GetAbilitiesSearch(string filtering);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAbilitiesSearch", ReplyAction="http://tempuri.org/IService1/GetAbilitiesSearchResponse")]
        System.Threading.Tasks.Task<AplicationService.DTOs.AbilityDTO[]> GetAbilitiesSearchAsync(string filtering);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostAbility", ReplyAction="http://tempuri.org/IService1/PostAbilityResponse")]
        string PostAbility(AplicationService.DTOs.AbilityDTO abilityDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostAbility", ReplyAction="http://tempuri.org/IService1/PostAbilityResponse")]
        System.Threading.Tasks.Task<string> PostAbilityAsync(AplicationService.DTOs.AbilityDTO abilityDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAbilityByID", ReplyAction="http://tempuri.org/IService1/GetAbilityByIDResponse")]
        AplicationService.DTOs.AbilityDTO GetAbilityByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAbilityByID", ReplyAction="http://tempuri.org/IService1/GetAbilityByIDResponse")]
        System.Threading.Tasks.Task<AplicationService.DTOs.AbilityDTO> GetAbilityByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletAbility", ReplyAction="http://tempuri.org/IService1/DeletAbilityResponse")]
        string DeletAbility(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletAbility", ReplyAction="http://tempuri.org/IService1/DeletAbilityResponse")]
        System.Threading.Tasks.Task<string> DeletAbilityAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUser", ReplyAction="http://tempuri.org/IService1/UpdateUserResponse")]
        string UpdateUser(AplicationService.DTOs.AbilityDTO abilityDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUser", ReplyAction="http://tempuri.org/IService1/UpdateUserResponse")]
        System.Threading.Tasks.Task<string> UpdateUserAsync(AplicationService.DTOs.AbilityDTO abilityDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetWeapons", ReplyAction="http://tempuri.org/IService1/GetWeaponsResponse")]
        AplicationService.DTOs.WeaponDTO[] GetWeapons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetWeapons", ReplyAction="http://tempuri.org/IService1/GetWeaponsResponse")]
        System.Threading.Tasks.Task<AplicationService.DTOs.WeaponDTO[]> GetWeaponsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostWeapon", ReplyAction="http://tempuri.org/IService1/PostWeaponResponse")]
        string PostWeapon(AplicationService.DTOs.WeaponDTO weaponDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostWeapon", ReplyAction="http://tempuri.org/IService1/PostWeaponResponse")]
        System.Threading.Tasks.Task<string> PostWeaponAsync(AplicationService.DTOs.WeaponDTO weaponDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetWeaponByID", ReplyAction="http://tempuri.org/IService1/GetWeaponByIDResponse")]
        AplicationService.DTOs.WeaponDTO GetWeaponByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetWeaponByID", ReplyAction="http://tempuri.org/IService1/GetWeaponByIDResponse")]
        System.Threading.Tasks.Task<AplicationService.DTOs.WeaponDTO> GetWeaponByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletWeapon", ReplyAction="http://tempuri.org/IService1/DeletWeaponResponse")]
        string DeletWeapon(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletWeapon", ReplyAction="http://tempuri.org/IService1/DeletWeaponResponse")]
        System.Threading.Tasks.Task<string> DeletWeaponAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClans", ReplyAction="http://tempuri.org/IService1/GetClansResponse")]
        AplicationService.DTOs.ClanDTO[] GetClans();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClans", ReplyAction="http://tempuri.org/IService1/GetClansResponse")]
        System.Threading.Tasks.Task<AplicationService.DTOs.ClanDTO[]> GetClansAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostClan", ReplyAction="http://tempuri.org/IService1/PostClanResponse")]
        string PostClan(AplicationService.DTOs.ClanDTO clanDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostClan", ReplyAction="http://tempuri.org/IService1/PostClanResponse")]
        System.Threading.Tasks.Task<string> PostClanAsync(AplicationService.DTOs.ClanDTO clanDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClanByID", ReplyAction="http://tempuri.org/IService1/GetClanByIDResponse")]
        AplicationService.DTOs.ClanDTO GetClanByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClanByID", ReplyAction="http://tempuri.org/IService1/GetClanByIDResponse")]
        System.Threading.Tasks.Task<AplicationService.DTOs.ClanDTO> GetClanByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteClan", ReplyAction="http://tempuri.org/IService1/DeleteClanResponse")]
        string DeleteClan(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteClan", ReplyAction="http://tempuri.org/IService1/DeleteClanResponse")]
        System.Threading.Tasks.Task<string> DeleteClanAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateClan", ReplyAction="http://tempuri.org/IService1/UpdateClanResponse")]
        string UpdateClan(AplicationService.DTOs.ClanDTO clanDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateClan", ReplyAction="http://tempuri.org/IService1/UpdateClanResponse")]
        System.Threading.Tasks.Task<string> UpdateClanAsync(AplicationService.DTOs.ClanDTO clanDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetChampions", ReplyAction="http://tempuri.org/IService1/GetChampionsResponse")]
        AplicationService.DTOs.ChampionDTO[] GetChampions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetChampions", ReplyAction="http://tempuri.org/IService1/GetChampionsResponse")]
        System.Threading.Tasks.Task<AplicationService.DTOs.ChampionDTO[]> GetChampionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostChampion", ReplyAction="http://tempuri.org/IService1/PostChampionResponse")]
        string PostChampion(AplicationService.DTOs.ChampionDTO championDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostChampion", ReplyAction="http://tempuri.org/IService1/PostChampionResponse")]
        System.Threading.Tasks.Task<string> PostChampionAsync(AplicationService.DTOs.ChampionDTO championDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetChampionByID", ReplyAction="http://tempuri.org/IService1/GetChampionByIDResponse")]
        AplicationService.DTOs.ChampionDTO GetChampionByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetChampionByID", ReplyAction="http://tempuri.org/IService1/GetChampionByIDResponse")]
        System.Threading.Tasks.Task<AplicationService.DTOs.ChampionDTO> GetChampionByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteChampion", ReplyAction="http://tempuri.org/IService1/DeleteChampionResponse")]
        string DeleteChampion(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteChampion", ReplyAction="http://tempuri.org/IService1/DeleteChampionResponse")]
        System.Threading.Tasks.Task<string> DeleteChampionAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateChampion", ReplyAction="http://tempuri.org/IService1/UpdateChampionResponse")]
        string UpdateChampion(AplicationService.DTOs.ChampionDTO championDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateChampion", ReplyAction="http://tempuri.org/IService1/UpdateChampionResponse")]
        System.Threading.Tasks.Task<string> UpdateChampionAsync(AplicationService.DTOs.ChampionDTO championDTO);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : MVC.SOAPService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<MVC.SOAPService.IService1>, MVC.SOAPService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public MVC.SOAPService.CompositeType GetDataUsingDataContract(MVC.SOAPService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<MVC.SOAPService.CompositeType> GetDataUsingDataContractAsync(MVC.SOAPService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public AplicationService.DTOs.AbilityDTO[] GetAbilities() {
            return base.Channel.GetAbilities();
        }
        
        public System.Threading.Tasks.Task<AplicationService.DTOs.AbilityDTO[]> GetAbilitiesAsync() {
            return base.Channel.GetAbilitiesAsync();
        }
        
        public AplicationService.DTOs.AbilityDTO[] GetAbilitiesSearch(string filtering) {
            return base.Channel.GetAbilitiesSearch(filtering);
        }
        
        public System.Threading.Tasks.Task<AplicationService.DTOs.AbilityDTO[]> GetAbilitiesSearchAsync(string filtering) {
            return base.Channel.GetAbilitiesSearchAsync(filtering);
        }
        
        public string PostAbility(AplicationService.DTOs.AbilityDTO abilityDTO) {
            return base.Channel.PostAbility(abilityDTO);
        }
        
        public System.Threading.Tasks.Task<string> PostAbilityAsync(AplicationService.DTOs.AbilityDTO abilityDTO) {
            return base.Channel.PostAbilityAsync(abilityDTO);
        }
        
        public AplicationService.DTOs.AbilityDTO GetAbilityByID(int id) {
            return base.Channel.GetAbilityByID(id);
        }
        
        public System.Threading.Tasks.Task<AplicationService.DTOs.AbilityDTO> GetAbilityByIDAsync(int id) {
            return base.Channel.GetAbilityByIDAsync(id);
        }
        
        public string DeletAbility(int id) {
            return base.Channel.DeletAbility(id);
        }
        
        public System.Threading.Tasks.Task<string> DeletAbilityAsync(int id) {
            return base.Channel.DeletAbilityAsync(id);
        }
        
        public string UpdateUser(AplicationService.DTOs.AbilityDTO abilityDTO) {
            return base.Channel.UpdateUser(abilityDTO);
        }
        
        public System.Threading.Tasks.Task<string> UpdateUserAsync(AplicationService.DTOs.AbilityDTO abilityDTO) {
            return base.Channel.UpdateUserAsync(abilityDTO);
        }
        
        public AplicationService.DTOs.WeaponDTO[] GetWeapons() {
            return base.Channel.GetWeapons();
        }
        
        public System.Threading.Tasks.Task<AplicationService.DTOs.WeaponDTO[]> GetWeaponsAsync() {
            return base.Channel.GetWeaponsAsync();
        }
        
        public string PostWeapon(AplicationService.DTOs.WeaponDTO weaponDTO) {
            return base.Channel.PostWeapon(weaponDTO);
        }
        
        public System.Threading.Tasks.Task<string> PostWeaponAsync(AplicationService.DTOs.WeaponDTO weaponDTO) {
            return base.Channel.PostWeaponAsync(weaponDTO);
        }
        
        public AplicationService.DTOs.WeaponDTO GetWeaponByID(int id) {
            return base.Channel.GetWeaponByID(id);
        }
        
        public System.Threading.Tasks.Task<AplicationService.DTOs.WeaponDTO> GetWeaponByIDAsync(int id) {
            return base.Channel.GetWeaponByIDAsync(id);
        }
        
        public string DeletWeapon(int id) {
            return base.Channel.DeletWeapon(id);
        }
        
        public System.Threading.Tasks.Task<string> DeletWeaponAsync(int id) {
            return base.Channel.DeletWeaponAsync(id);
        }
        
        public AplicationService.DTOs.ClanDTO[] GetClans() {
            return base.Channel.GetClans();
        }
        
        public System.Threading.Tasks.Task<AplicationService.DTOs.ClanDTO[]> GetClansAsync() {
            return base.Channel.GetClansAsync();
        }
        
        public string PostClan(AplicationService.DTOs.ClanDTO clanDTO) {
            return base.Channel.PostClan(clanDTO);
        }
        
        public System.Threading.Tasks.Task<string> PostClanAsync(AplicationService.DTOs.ClanDTO clanDTO) {
            return base.Channel.PostClanAsync(clanDTO);
        }
        
        public AplicationService.DTOs.ClanDTO GetClanByID(int id) {
            return base.Channel.GetClanByID(id);
        }
        
        public System.Threading.Tasks.Task<AplicationService.DTOs.ClanDTO> GetClanByIDAsync(int id) {
            return base.Channel.GetClanByIDAsync(id);
        }
        
        public string DeleteClan(int id) {
            return base.Channel.DeleteClan(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteClanAsync(int id) {
            return base.Channel.DeleteClanAsync(id);
        }
        
        public string UpdateClan(AplicationService.DTOs.ClanDTO clanDTO) {
            return base.Channel.UpdateClan(clanDTO);
        }
        
        public System.Threading.Tasks.Task<string> UpdateClanAsync(AplicationService.DTOs.ClanDTO clanDTO) {
            return base.Channel.UpdateClanAsync(clanDTO);
        }
        
        public AplicationService.DTOs.ChampionDTO[] GetChampions() {
            return base.Channel.GetChampions();
        }
        
        public System.Threading.Tasks.Task<AplicationService.DTOs.ChampionDTO[]> GetChampionsAsync() {
            return base.Channel.GetChampionsAsync();
        }
        
        public string PostChampion(AplicationService.DTOs.ChampionDTO championDTO) {
            return base.Channel.PostChampion(championDTO);
        }
        
        public System.Threading.Tasks.Task<string> PostChampionAsync(AplicationService.DTOs.ChampionDTO championDTO) {
            return base.Channel.PostChampionAsync(championDTO);
        }
        
        public AplicationService.DTOs.ChampionDTO GetChampionByID(int id) {
            return base.Channel.GetChampionByID(id);
        }
        
        public System.Threading.Tasks.Task<AplicationService.DTOs.ChampionDTO> GetChampionByIDAsync(int id) {
            return base.Channel.GetChampionByIDAsync(id);
        }
        
        public string DeleteChampion(int id) {
            return base.Channel.DeleteChampion(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteChampionAsync(int id) {
            return base.Channel.DeleteChampionAsync(id);
        }
        
        public string UpdateChampion(AplicationService.DTOs.ChampionDTO championDTO) {
            return base.Channel.UpdateChampion(championDTO);
        }
        
        public System.Threading.Tasks.Task<string> UpdateChampionAsync(AplicationService.DTOs.ChampionDTO championDTO) {
            return base.Channel.UpdateChampionAsync(championDTO);
        }
    }
}
